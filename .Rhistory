for(a in 1:nages){
for(i in 1:narea){
Z_aiy[1:nages,i,y] <- M + indat[1:nages,s+4,i]*Fv[i] ## female selex for now (cols 5:6)
if(a > 1  & a < max(nages)) {
pLeave = NCome = 0
for(j in 1:narea){
if(i != j){
pLeave = pLeave + X_ija[i,j,a-1]
NCome = NCome + X_ija[j,i,a-1]*N_aiy[a-1,j,y-1]
} # end i != j
} # end subareas j
N_aiy[a,i,y] <- ((1-pLeave)* N_aiy[a-1,i,y-1] +NCome)*exp(-Z_aiy[a-1,i,y-1])
if(is.na(N_aiy[a,i,y])) stop('error in NAIY')
} ## end age < maxage
if(a == max(nages)) N_aiy[a,i,y] <-  N_aiy[a-1,i,y-1]*exp(-Z_aiy[a-1,i,y-1])/(1- exp(-Z_aiy[a,i,y-1]))
B_aiy[a,i,y] <- N_aiy[a,i,y]*indat[a,s+2,i] ## weight in 3 and 4 col
if(s == 1){
SB_aiy[a,i,y]  <- B_aiy[a,i,y]*indat[a,2,i]
}
} ## end ages
} # end subareas i
for(i in 1:narea){
B_i <- sum(B_aiy[,i,y])
SB_i <- sum(SB_aiy[,i,y])
R_iy[y,i] <- doSRR(SB_aiy = SB_i,
SB0i = SB0_i[which(row.names(SB0_i) == 'TIME'),i])
if (y < 50)     N_aiy[1,i,y+1] <- R_iy[y,i]
} # end subareas i
} ## end y > 1
} ## end years
N_aiy[,,5]
N_aiy[,,3]
N_aiy[,,1]
N_aiy[,,2]
N_aiy[,,1]
N_aiy[,,2]
N_aiy[1,,2]
N_aiy[1,,3]
N_aiy[1,,44]
N_aiy[1,,22]
N_aiy[1,,15]
N_aiy[1,,4]
N_aiy[1,,6]
N_aiy[1,,7]
N_aiy[1,,12]
N_aiy[5,,12]
N_aiy[5,,1]
N_aiy[5,,5]
N_aiy[5,,12]
N_aiy[,,21]
rm(list = ls())
options(scipen = 0)
require(ggplot2, quietly = T)
require(reshape)
require(dplyr, quietly = T)
require(here)
require(ggsidekick)
## settings
narea = 3
nages = 21
steep = 0.5
## load functions & initialize OM
lapply(list.files(here("R"), full.names = TRUE), source)
SB0_i <-  data.frame()
for(m in c(1:3)){
SB0_im <- getSB0(eq_method = c('STD','STB','STB')[m])
# SB0_i[m,1] <-
SB0_i[m,1:3] <- SB0_im
}
row.names(SB0_i) <- c('STD','TIME','STB')
rbind(
doNage(s = 1,  Fv = rep(0,narea), eq_method = 'STD')[,1:3] %>%
data.frame() %>%
mutate(Age = 1:nages, EQ = 'STD')%>%
reshape2::melt( id = c('Age','EQ')),
doNage(s = 1,  Fv = rep(0,narea), eq_method = 'TIME')[,1:3] %>%
data.frame() %>%
mutate(Age = 1:nages, EQ = 'TIME')%>%
reshape2::melt( id = c('Age','EQ')),
doNage(s = 1,  Fv = rep(0,narea), eq_method = 'STB')[,1:3] %>%
data.frame() %>%
mutate(Age = 1:nages, EQ = 'STB')%>%
reshape2::melt( id = c('Age','EQ'))) %>%
mutate(Area = substr(variable,2,2)) %>%
select(-variable) %>%
mutate(group = paste0("Area ",Area," ",EQ)) %>%
ggplot(., aes(x = Age, y = value, col = group, linetype = group)) +
geom_line(lwd = 1.1) +
scale_color_grey() +
scale_linetype_manual(values = rep(c('solid','dashed','dotted'),3))+
# scale_y_continuous(limits = c(0,1)) +
labs(x = 'Age', y = 'Relative Numbers', color = '', linetype = "") +
theme_sleek() +
theme(legend.position = c(0.8,0.8),
axis.title = element_text(size = 16),
axis.text = element_text(size = 16),
legend.text = element_text(size = 20))
doNage(s = 1,  Fv = rep(0,narea), eq_method = 'STD')[,1:3] %>%
data.frame() %>%
mutate(Age = 1:nages, EQ = 'STD')%>%
reshape2::melt( id = c('Age','EQ')),
doNage(s = 1,  Fv = rep(0,narea), eq_method = 'TIME')[,1:3] %>%
data.frame() %>%
mutate(Age = 1:nages, EQ = 'TIME')%>%
reshape2::melt( id = c('Age','EQ')),
doNage(s = 1,  Fv = rep(0,narea), eq_method = 'STB')[,1:3] %>%
data.frame() %>%
mutate(Age = 1:nages, EQ = 'STB')%>%
reshape2::melt( id = c('Age','EQ'))) %>%
mutate(Area = substr(variable,2,2)) %>%
select(-variable) %>%
mutate(group = paste0("Area ",Area," ",EQ)) %>%
ggplot(., aes(x = Age, y = value, col = group, linetype = group)) +
geom_line(lwd = 1.1) +
scale_color_grey() +
scale_linetype_manual(values = rep(c('solid','dashed','dotted'),3))+
# scale_y_continuous(limits = c(0,1)) +
labs(x = 'Age', y = 'Relative Numbers', color = '', linetype = "") +
theme_sleek() +
theme(legend.position = c(0.8,0.8),
axis.title = element_text(size = 16),
axis.text = element_text(size = 16),
legend.text = element_text(size = 20)) +
facet_wrap(~group)
rbind(
doNage(s = 1,  Fv = rep(0,narea), eq_method = 'STD')[,1:3] %>%
data.frame() %>%
mutate(Age = 1:nages, EQ = 'STD')%>%
reshape2::melt( id = c('Age','EQ')),
doNage(s = 1,  Fv = rep(0,narea), eq_method = 'TIME')[,1:3] %>%
data.frame() %>%
mutate(Age = 1:nages, EQ = 'TIME')%>%
reshape2::melt( id = c('Age','EQ')),
doNage(s = 1,  Fv = rep(0,narea), eq_method = 'STB')[,1:3] %>%
data.frame() %>%
mutate(Age = 1:nages, EQ = 'STB')%>%
reshape2::melt( id = c('Age','EQ'))) %>%
mutate(Area = substr(variable,2,2)) %>%
select(-variable) %>%
mutate(group = paste0("Area ",Area," ",EQ)) %>%
ggplot(., aes(x = Age, y = value, col = group, linetype = group)) +
geom_line(lwd = 1.1) +
scale_color_grey() +
scale_linetype_manual(values = rep(c('solid','dashed','dotted'),3))+
# scale_y_continuous(limits = c(0,1)) +
labs(x = 'Age', y = 'Relative Numbers', color = '', linetype = "") +
theme_sleek() +
theme(legend.position = c(0.8,0.8),
axis.title = element_text(size = 16),
axis.text = element_text(size = 16),
legend.text = element_text(size = 20)) +
facet_wrap(~group)
rbind(
doNage(s = 1,  Fv = rep(0,narea), eq_method = 'STD')[,1:3] %>%
data.frame() %>%
mutate(Age = 1:nages, EQ = 'STD')%>%
reshape2::melt( id = c('Age','EQ')),
doNage(s = 1,  Fv = rep(0,narea), eq_method = 'TIME')[,1:3] %>%
data.frame() %>%
mutate(Age = 1:nages, EQ = 'TIME')%>%
reshape2::melt( id = c('Age','EQ')),
doNage(s = 1,  Fv = rep(0,narea), eq_method = 'STB')[,1:3] %>%
data.frame() %>%
mutate(Age = 1:nages, EQ = 'STB')%>%
reshape2::melt( id = c('Age','EQ'))) %>%
mutate(Area = substr(variable,2,2)) %>%
select(-variable) %>%
mutate(group = paste0("Area ",Area," ",EQ)) %>%
ggplot(., aes(x = Age, y = value, col = group, linetype = group)) +
geom_line(lwd = 1.1) +
scale_color_grey() +
scale_linetype_manual(values = rep(c('solid','dashed','dotted'),3))+
# scale_y_continuous(limits = c(0,1)) +
labs(x = 'Age', y = 'Relative Numbers', color = '', linetype = "") +
theme_sleek() +
theme(legend.position = 'bottom',
axis.title = element_text(size = 16),
axis.text = element_text(size = 16),
legend.text = element_text(size = 20)) +
facet_wrap(~group)
doNage(s = 1,  Fv = rep(0,narea), eq_method = 'STD')[,1:3] %>%
data.frame() %>%
mutate(Age = 1:nages, EQ = 'STD')%>%
reshape2::melt( id = c('Age','EQ')),
doNage(s = 1,  Fv = rep(0,narea), eq_method = 'TIME')[,1:3] %>%
data.frame() %>%
mutate(Age = 1:nages, EQ = 'TIME')%>%
reshape2::melt( id = c('Age','EQ')),
doNage(s = 1,  Fv = rep(0,narea), eq_method = 'STB')[,1:3] %>%
data.frame() %>%
mutate(Age = 1:nages, EQ = 'STB')%>%
reshape2::melt( id = c('Age','EQ'))) %>%
mutate(Area = substr(variable,2,2)) %>%
select(-variable) %>%
mutate(group = paste0("Area ",Area," ",EQ)) %>%
ggplot(., aes(x = Age, y = value, col = group, linetype = group)) +
geom_line(lwd = 1.1) +
scale_color_grey() +
scale_linetype_manual(values = rep(c('solid','dashed','dotted'),3))+
scale_y_continuous(limits = c(0,1)) +
labs(x = 'Age', y = 'Relative Numbers', color = '', linetype = "") +
theme_sleek() +
theme(legend.position = 'none',
axis.title = element_text(size = 16),
axis.text = element_text(size = 16),
legend.text = element_text(size = 20)) +
facet_wrap(~group)
rbind(
doNage(s = 1,  Fv = rep(0,narea), eq_method = 'STD')[,1:3] %>%
data.frame() %>%
mutate(Age = 1:nages, EQ = 'STD')%>%
reshape2::melt( id = c('Age','EQ')),
doNage(s = 1,  Fv = rep(0,narea), eq_method = 'TIME')[,1:3] %>%
data.frame() %>%
mutate(Age = 1:nages, EQ = 'TIME')%>%
reshape2::melt( id = c('Age','EQ')),
doNage(s = 1,  Fv = rep(0,narea), eq_method = 'STB')[,1:3] %>%
data.frame() %>%
mutate(Age = 1:nages, EQ = 'STB')%>%
reshape2::melt( id = c('Age','EQ'))) %>%
mutate(Area = substr(variable,2,2)) %>%
select(-variable) %>%
mutate(group = paste0("Area ",Area," ",EQ)) %>%
ggplot(., aes(x = Age, y = value, col = group, linetype = group)) +
geom_line(lwd = 1.1) +
scale_color_grey() +
scale_linetype_manual(values = rep(c('solid','dashed','dotted'),3))+
scale_y_continuous(limits = c(0,1)) +
labs(x = 'Age', y = 'Relative Numbers', color = '', linetype = "") +
theme_sleek() +
theme(legend.position = 'none',
axis.title = element_text(size = 16),
axis.text = element_text(size = 16),
legend.text = element_text(size = 20)) +
facet_wrap(~EQ)
rbind(
doNage(s = 1,  Fv = rep(0,narea), eq_method = 'STD')[,1:3] %>%
data.frame() %>%
mutate(Age = 1:nages, EQ = 'STD')%>%
reshape2::melt( id = c('Age','EQ')),
doNage(s = 1,  Fv = rep(0,narea), eq_method = 'TIME')[,1:3] %>%
data.frame() %>%
mutate(Age = 1:nages, EQ = 'TIME')%>%
reshape2::melt( id = c('Age','EQ')),
doNage(s = 1,  Fv = rep(0,narea), eq_method = 'STB')[,1:3] %>%
data.frame() %>%
mutate(Age = 1:nages, EQ = 'STB')%>%
reshape2::melt( id = c('Age','EQ'))) %>%
mutate(Area = substr(variable,2,2)) %>%
select(-variable) %>%
mutate(group = paste0("Area ",Area," ",EQ)) %>%
ggplot(., aes(x = Age, y = value, col = group, linetype = group)) +
geom_line(lwd = 1.1) +
scale_color_grey() +
scale_linetype_manual(values = rep(c('solid','dashed','dotted'),3))+
scale_y_continuous(limits = c(0,1.5)) +
labs(x = 'Age', y = 'Relative Numbers', color = '', linetype = "") +
theme_sleek() +
theme(legend.position = 'none',
axis.title = element_text(size = 16),
axis.text = element_text(size = 16),
legend.text = element_text(size = 20)) +
facet_wrap(~EQ)
ggsave(last_plot(),
file = here('figs','Nage_All.png'),
width = 6, height = 4, unit = 'in', dpi = 520)
rbind(
doNage(s = 1,  Fv = rep(0,narea), eq_method = 'STD')[,1:3] %>%
data.frame() %>%
mutate(Age = 1:nages, EQ = 'STD')%>%
reshape2::melt( id = c('Age','EQ')),
doNage(s = 1,  Fv = rep(0,narea), eq_method = 'TIME')[,1:3] %>%
data.frame() %>%
mutate(Age = 1:nages, EQ = 'TIME')%>%
reshape2::melt( id = c('Age','EQ')),
doNage(s = 1,  Fv = rep(0,narea), eq_method = 'STB')[,1:3] %>%
data.frame() %>%
mutate(Age = 1:nages, EQ = 'STB')%>%
reshape2::melt( id = c('Age','EQ'))) %>%
mutate(Area = substr(variable,2,2)) %>%
select(-variable) %>%
mutate(group = paste0("Area ",Area," ",EQ)) %>%
ggplot(., aes(x = Age, y = value, col = group, linetype = group)) +
geom_line(lwd = 1.1) +
scale_color_grey() +
scale_linetype_manual(values = rep(c('solid','dashed','dotted'),3))+
scale_y_continuous(limits = c(0,1.5)) +
labs(x = 'Age', y = 'Relative Numbers', color = '', linetype = "") +
theme_sleek() +
theme(legend.position = 'none',
axis.title = element_text(size = 10),
axis.text = element_text(size = 10),
legend.text = element_text(size = 20)) +
facet_wrap(~EQ)
ggsave(last_plot(),
file = here('figs','Nage_All.png'),
width = 10, height = 8, unit = 'in', dpi = 520)
X_ija
## Xija ----
plist = list()
for(g in 1:6){ ## loop ages
plist[[g]] <-  data.frame(X_ija[,,g]) %>%
mutate('FRM' = 1:3) %>%
melt(id = 'FRM') %>%
ggplot(., aes(x = FRM, y = variable, fill = value)) +
geom_tile() +
ggsidekick::theme_sleek() +
theme(legend.position = 'none',
axis.ticks = element_blank(),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10)) +
scale_x_continuous(expand = c(0,0), breaks = 1:3, labels = paste("Area",1:narea)) +
scale_y_discrete(expand = c(0,0), labels = paste("Area",1:narea))+
geom_text(aes(label = value), colour = 'white', size = 10) +
labs(x = 'Source', y = 'Sink',
title = ifelse(g < 6, paste('Age ',g), "Ages 6+"))
}
rm(list = ls())
options(scipen = 0)
require(ggplot2, quietly = T)
require(reshape)
require(dplyr, quietly = T)
require(here)
require(ggsidekick)
## Xija ----
plist = list()
for(g in 1:6){ ## loop ages
plist[[g]] <-  data.frame(X_ija[,,g]) %>%
mutate('FRM' = 1:3) %>%
melt(id = 'FRM') %>%
ggplot(., aes(x = FRM, y = variable, fill = value)) +
geom_tile() +
ggsidekick::theme_sleek() +
theme(legend.position = 'none',
axis.ticks = element_blank(),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10)) +
scale_x_continuous(expand = c(0,0), breaks = 1:3, labels = paste("Area",1:narea)) +
scale_y_discrete(expand = c(0,0), labels = paste("Area",1:narea))+
geom_text(aes(label = value), colour = 'white', size = 10) +
labs(x = 'Source', y = 'Sink',
title = ifelse(g < 6, paste('Age ',g), "Ages 6+"))
}
X_ija <- array(NA, dim = c(narea,narea,nages))
for(a in 1:2){ ## only two areas have movement
for(g in 1:dim(X_ija)[3]){ ## loop ages
if(g < 6 & a == 1){
X_ija[a,3,g] <- 0.2 ## 20% movement from a to a3
X_ija[a,a,g] <- 0.8 ## retained
} else if(g < 6 & a == 2){
X_ija[a,3,g] <- 0.05
X_ija[a,a,g] <- 0.95
} else{
X_ija[a,,g] <- 0 ## no movement at older ages
diag(X_ija[,,g]) <- 1
# cat( a, " ",diag(X_ija[,,g]) ,"\n")
} # end else
} ## end ages
} ## end areas
## settings
narea = 3
nages = 21
steep = 0.5
X_ija <- array(NA, dim = c(narea,narea,nages))
for(a in 1:2){ ## only two areas have movement
for(g in 1:dim(X_ija)[3]){ ## loop ages
if(g < 6 & a == 1){
X_ija[a,3,g] <- 0.2 ## 20% movement from a to a3
X_ija[a,a,g] <- 0.8 ## retained
} else if(g < 6 & a == 2){
X_ija[a,3,g] <- 0.05
X_ija[a,a,g] <- 0.95
} else{
X_ija[a,,g] <- 0 ## no movement at older ages
diag(X_ija[,,g]) <- 1
# cat( a, " ",diag(X_ija[,,g]) ,"\n")
} # end else
} ## end ages
} ## end areas
X_ija[is.na(X_ija)] <- 0
X_ija[3,3,] <- 1 ## area 3 is self-seeding
## sanity check - all rows should sum to 1
for(i in 1:dim(X_ija)[3]){
print(rowSums(X_ija[,,a]) == 1)
}
## Xija ----
plist = list()
for(g in 1:6){ ## loop ages
plist[[g]] <-  data.frame(X_ija[,,g]) %>%
mutate('FRM' = 1:3) %>%
melt(id = 'FRM') %>%
ggplot(., aes(x = FRM, y = variable, fill = value)) +
geom_tile() +
ggsidekick::theme_sleek() +
theme(legend.position = 'none',
axis.ticks = element_blank(),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10)) +
scale_x_continuous(expand = c(0,0), breaks = 1:3, labels = paste("Area",1:narea)) +
scale_y_discrete(expand = c(0,0), labels = paste("Area",1:narea))+
geom_text(aes(label = value), colour = 'white', size = 10) +
labs(x = 'Source', y = 'Sink',
title = ifelse(g < 6, paste('Age ',g), "Ages 6+"))
}
ggsave(Rmisc::multiplot(plotlist = plist,
layout = matrix(c(1,2,3,4,5,6),nrow = 2, byrow = TRUE) ),
file = here('figs','X_ija.png'),
width = 10, height = 8, unit = 'in', dpi = 520)
## uniroot/find FMSY ----
df2 <- data.frame(
expand.grid('Area' = 1:3,
'Method' = c('Fmsy_System','Fmsy_Config')),
'FMSY' = NA,
'MSY' = NA,
'BMSY' = NA,
'B0' = NA)
## single F, maximize system yield
df2$FMSY[df2$Method == 'Fmsy_System'] <- as.numeric(uniroot(f = dfx.dxSYS,  h = steep, interval = c(0.02,1))[1])
## uniroot sols
dfx.dxSYS <- function(Fv_test, h = steep){
y1 <- masterFunc(SRR = 1, h = steep, Fv = rep(Fv_test-0.001,narea))$yield
y2 <- masterFunc(SRR = 1, h = steep, Fv = rep(Fv_test+0.001,narea))$yield
appx <- (sum(y2)-sum(y1))/(0.002) #0.002 is total X delta; we are using system yield
return(appx)
}
## systemwide but with separate FV_test
dfx.dxSYS2 <- function(Fv_testa1, Fv_testa2, h = steep){
y1 <- masterFunc(SRR = 1, h = steep, Fv = c(Fv_testa1-0.001,Fv_testa2- 0.001))$yield
y2 <- masterFunc(SRR = 1, h = steep, Fv = c(Fv_testa1+0.001,Fv_testa2+ 0.001))$yield
appx <- (sum(y2)-sum(y1))/(0.002) #0.002 is total X delta; we are using system yield
return(appx)
}
dfx.dxAREA <- function(Fv_test, h = steep){
y1 <- masterFunc(SRR = 1, h = steep, Fv = rep(Fv_test-0.001,narea))$yield[3]
y2 <- masterFunc(SRR = 1, h = steep, Fv = rep(Fv_test+0.001,narea))$yield[3]
appx <- (y2-y1)/(0.002) #0.002 is total delta
return(appx)
}
minFunc <- function(F1,F2,F3){
minus <- as.numeric(c(F1 - 0.001, F2 - 0.001, F3 - 0.001))
plus <- as.numeric(c(F1 +0.001, F2 + 0.001, F3 + 0.001))
y1 <- masterFunc(SRR = 1, h = steep, Fv = minus)$yield
y2 <- masterFunc(SRR = 1, h = steep, Fv = plus)$yield
appx <- (sum(y2)-sum(y1))/(0.002) ## system yield again
return(appx)
}
## single F, maximize system yield
df2$FMSY[df2$Method == 'Fmsy_System'] <- as.numeric(uniroot(f = dfx.dxSYS,  h = steep, interval = c(0.02,1))[1])
## load functions & initialize OM
lapply(list.files(here("R"), full.names = TRUE), source)
## single F, maximize system yield
df2$FMSY[df2$Method == 'Fmsy_System'] <- as.numeric(uniroot(f = dfx.dxSYS,  h = steep, interval = c(0.02,1))[1])
df2$MSY[df2$Method == 'Fmsy_System'] <-  masterFunc(SRR = 1, Fv = df2$FMSY[df2$Method == 'Fmsy_System'])$yield
df2$BMSY[df2$Method == 'Fmsy_System'] <- masterFunc(SRR = 1, Fv = df2$FMSY[df2$Method == 'Fmsy_System'])$spawnbio
df2
## unique Fs ('config'), maximize system yield
df2$FMSY[df2$Method == 'Fmsy_Config'] <- coef(mle(minFunc, start = list(F1 = 0.025, F2 = 0.025, F3 = 0.025),
method = "L-BFGS-B",
lower = c(0.02, 0.02,0.02), upper = c(1,1,1)))
df2$MSY[df2$Method == 'Fmsy_Config'] <-  masterFunc(SRR = 1, Fv = df2$FMSY[df2$Method == 'Fmsy_Config'])$yield
df2$BMSY[df2$Method == 'Fmsy_Config'] <- masterFunc(SRR = 1, Fv = df2$FMSY[df2$Method == 'Fmsy_Config'])$spawnbio
unfishedB <- apply(doNage()[,7:9],2,sum)
df2$B0[df2$Area == 1 ] <- unfishedB[1];df2$B0[df2$Area == 2 ] <- unfishedB[2];df2$B0[df2$Area == 3 ] <- unfishedB[3]
## change catchability assumption (Langseth & Schueller 2016)
require(stats)
require(stats4)
## unique Fs ('config'), maximize system yield
df2$FMSY[df2$Method == 'Fmsy_Config'] <- coef(mle(minFunc, start = list(F1 = 0.025, F2 = 0.025, F3 = 0.025),
method = "L-BFGS-B",
lower = c(0.02, 0.02,0.02), upper = c(1,1,1)))
df2$MSY[df2$Method == 'Fmsy_Config'] <-  masterFunc(SRR = 1, Fv = df2$FMSY[df2$Method == 'Fmsy_Config'])$yield
df2$BMSY[df2$Method == 'Fmsy_Config'] <- masterFunc(SRR = 1, Fv = df2$FMSY[df2$Method == 'Fmsy_Config'])$spawnbio
unfishedB <- apply(doNage()[,7:9],2,sum)
df2$B0[df2$Area == 1 ] <- unfishedB[1];df2$B0[df2$Area == 2 ] <- unfishedB[2];df2$B0[df2$Area == 3 ] <- unfishedB[3]
df2
## uniroot/find FMSY ----
df2 <- data.frame(
expand.grid('Area' = 1:3,
'Eq_Method' = c('STD','TIME','STB'),
'F_Method' = c('Fmsy_System','Fmsy_Config')),
'FMSY' = NA,
'MSY' = NA,
'BMSY' = NA,
'B0' = NA)
## uniroot/find FMSY ----
df2 <- data.frame(
expand.grid('Area' = 1:3,
'Eq_Method' = c('STD','TIME','STB'),
'F_Method' = c('Fmsy_System','Fmsy_Config')),
'FMSY' = NA,
'MSY' = NA,
'BMSY' = NA,
'B0' = NA)
## single F, maximize system yield
df2$FMSY[df2$F_Method == 'Fmsy_System'] <- as.numeric(uniroot(f = dfx.dxSYS,  h = steep, interval = c(0.02,1))[1])
df2$MSY[df2$F_Method == 'Fmsy_System'] <-  masterFunc(SRR = 1, Fv = df2$FMSY[df2$F_Method == 'Fmsy_System'])$yield
df2$BMSY[df2$F_Method == 'Fmsy_System'] <- masterFunc(SRR = 1, Fv = df2$FMSY[df2$F_Method == 'Fmsy_System'])$spawnbio
## uniroot/find FMSY ----
df2 <- data.frame(
expand.grid('Area' = 1:3,
'Eq_Method' = c('STD','TIME','STB'),
'F_Method' = c('Fmsy_System','Fmsy_Config')),
'FMSY' = NA,
'MSY' = NA,
'BMSY' = NA,
'B0' = NA)
df2
df2$FMSY[df2$F_Method == 'Fmsy_System' & df2$Eq_Method == 'STD'] <- as.numeric(uniroot(f = dfx.dxSYS,  h = steep, interval = c(0.02,1))[1])
df2$MSY[df2$F_Method == 'Fmsy_System' & df2$Eq_Method == 'STD'] <-  masterFunc(SRR = 1, Fv = df2$FMSY[df2$F_Method == 'Fmsy_System'])$yield
df2$BMSY[df2$F_Method == 'Fmsy_System' & df2$Eq_Method == 'STD'] <- masterFunc(SRR = 1, Fv = df2$FMSY[df2$F_Method == 'Fmsy_System'])$spawnbio
df2$FMSY[df2$F_Method == 'Fmsy_System' & df2$Eq_Method == 'STD']
as.numeric(uniroot(f = dfx.dxSYS,  h = steep, interval = c(0.02,1))[1])
