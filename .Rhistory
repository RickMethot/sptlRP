} else{
rdistUse <- recr_dist_adj
rlevelUse <-   rec_level ## should this be sum(Req?)
}
## define virgin biomass by AREA
SB0_i <- doNage( Fv = rep(0,narea),
X = X_ija,
rdist = rdistUse,
refR = rlevelUse)$SB_i
## get values at present Fv
prop <- doNage( Fv = rep(Ftest[v],narea),
X = X_ija,
rdist = rdistUse,
refR = rlevelUse)
# call Equ_Spawn_Recr_Fxn for each area to get B_equil and R_equil from SPB/R and SR parms
for(i in 1:narea){ ## will overwrite second time
# calc area-specific SPB/R and Yield/R, using area-specific R
if(length(rlevelUse) > 1){
rleveltmp = rlevelUse[i]
} else{
rleveltmp = rlevelUse
}
SB_Ri[v,i] <- prop$SB_i[i]/(rleveltmp*rdistUse[i])
Yield_Ri[v,i] <- prop$Yield_i[i]/(rleveltmp*rdistUse[i])
## Calc recruits using area-specific SB etc
propEq <- Equil_Spawn_Recr_Fxn(steepness = steep, SSB_virgin = SB0_i[i],
Recr_virgin = R0*rdistUse[i], SPR_temp = SB_Ri[v,i])
B_eq_i[v,i] <- propEq$B_equil
R_eq_i[v,i] <- propEq$R_equil
# if(v ==75 ) cat(k," ",i," ",B_eq_i[v,i], "\n")
if(k == 2){ ## store quantities
proposed_i[v,'Fv',i] <- Ftest[v]
proposed_i[v,'Yield',i] <-  Yield_Ri[v,i]*R_eq_i[v,i]
proposed_i[v,'B',i] <-    SB_Ri[v,i] *R_eq_i[v,i]
} ## end k == 2
} ## end areas
# use ratio of B_equils among areas to calculate adjustment to recr_dist
if(k == 1) recr_dist_adj <- B_eq_i[v,]/sum(B_eq_i[v,]); #  next()
if(v > 100 ) cat(Ftest[v]," ",rdistUse, "\n");
# if(k == 1) recr_dist_adj <- B_eq_i[v,]/sum(B_eq_i[v,])*recr_dist; next()
# } ## end steps a/b loop
## rick's question
rick[v,"Fv"] <- Ftest[v]
rick[v,"SBeqtotal"] <-   sum(B_eq_i[v,] )
rick[v,"R_ESUMB"] <- Equil_Spawn_Recr_Fxn(steepness = steep, SSB_virgin = sum(SB0_i),
Recr_virgin = R0, SPR_temp = sum(SB_Ri[v,]))$R_equil ## expected recruits given summed biomass in area
rick[v,"R_SUMEBA"]  <- sum( R_eq_i[v,]) ## sum of expected recruits in areas
proposed[v,'Fv'] <- Ftest[v]
proposed[v,'Yield'] <- sum(Yield_Ri[v,] * R_eq_i[v,]) # sum(Yield_Ri[v,]) * sum(R_eq_i[v,])
proposed[v,'B'] <-  sum(SB_Ri[v,] *  R_eq_i[v,i])  #sum(SB_Ri[v,]) * sum(B_eq_i[v,])
} ## end FV
for(v in 1:length(Ftest)){
# for(k in 1:2){ ## Loop over steps A & B
if(k == 1){
rdistUse <- recr_dist
rlevelUse <- rec_level
} else{
rdistUse <- recr_dist_adj
rlevelUse <-   rec_level ## should this be sum(Req?)
}
## define virgin biomass by AREA
SB0_i <- doNage( Fv = rep(0,narea),
X = X_ija,
rdist = rdistUse,
refR = rlevelUse)$SB_i
## get values at present Fv
prop <- doNage( Fv = rep(Ftest[v],narea),
X = X_ija,
rdist = rdistUse,
refR = rlevelUse)
# call Equ_Spawn_Recr_Fxn for each area to get B_equil and R_equil from SPB/R and SR parms
for(i in 1:narea){ ## will overwrite second time
# calc area-specific SPB/R and Yield/R, using area-specific R
if(length(rlevelUse) > 1){
rleveltmp = rlevelUse[i]
} else{
rleveltmp = rlevelUse
}
SB_Ri[v,i] <- prop$SB_i[i]/(rleveltmp*rdistUse[i])
Yield_Ri[v,i] <- prop$Yield_i[i]/(rleveltmp*rdistUse[i])
## Calc recruits using area-specific SB etc
propEq <- Equil_Spawn_Recr_Fxn(steepness = steep, SSB_virgin = SB0_i[i],
Recr_virgin = R0*rdistUse[i], SPR_temp = SB_Ri[v,i])
B_eq_i[v,i] <- propEq$B_equil
R_eq_i[v,i] <- propEq$R_equil
# if(v ==75 ) cat(k," ",i," ",B_eq_i[v,i], "\n")
# if(k == 2){ ## store quantities
proposed_i[v,'Fv',i] <- Ftest[v]
proposed_i[v,'Yield',i] <-  Yield_Ri[v,i]*R_eq_i[v,i]
proposed_i[v,'B',i] <-    SB_Ri[v,i] *R_eq_i[v,i]
# } ## end k == 2
} ## end areas
# use ratio of B_equils among areas to calculate adjustment to recr_dist
if(k == 1) recr_dist_adj <- B_eq_i[v,]/sum(B_eq_i[v,]); #  next()
# if(v > 100 ) cat(Ftest[v]," ",rdistUse, "\n");
if(v > 100 & i == 1) cat(Ftest[v]," ", proposed_i[v,'B',i] , "\n");
# if(k == 1) recr_dist_adj <- B_eq_i[v,]/sum(B_eq_i[v,])*recr_dist; next()
# } ## end steps a/b loop
## rick's question
rick[v,"Fv"] <- Ftest[v]
rick[v,"SBeqtotal"] <-   sum(B_eq_i[v,] )
rick[v,"R_ESUMB"] <- Equil_Spawn_Recr_Fxn(steepness = steep, SSB_virgin = sum(SB0_i),
Recr_virgin = R0, SPR_temp = sum(SB_Ri[v,]))$R_equil ## expected recruits given summed biomass in area
rick[v,"R_SUMEBA"]  <- sum( R_eq_i[v,]) ## sum of expected recruits in areas
proposed[v,'Fv'] <- Ftest[v]
proposed[v,'Yield'] <- sum(Yield_Ri[v,] * R_eq_i[v,]) # sum(Yield_Ri[v,]) * sum(R_eq_i[v,])
proposed[v,'B'] <-  sum(SB_Ri[v,] *  R_eq_i[v,i])  #sum(SB_Ri[v,]) * sum(B_eq_i[v,])
} ## end FV
## sanity check --
ggplot(current, aes(x = Fv, y = Yield)) +
geom_line(lwd = 1.1, aes(color = 'current')) +
geom_line(data = proposed, lwd = 1.1, aes(color = 'proposed')) +
theme_sleek()
for(v in 1:length(Ftest)){
# for(k in 1:2){ ## Loop over steps A & B
if(k == 1){
rdistUse <- recr_dist
rlevelUse <- rec_level
} else{
rdistUse <- recr_dist_adj
rlevelUse <-   rec_level ## should this be sum(Req?)
}
## define virgin biomass by AREA
SB0_i <- doNage( Fv = rep(0,narea),
X = X_ija,
rdist = rdistUse,
refR = rlevelUse)$SB_i
## get values at present Fv
prop <- doNage( Fv = rep(Ftest[v],narea),
X = X_ija,
rdist = rdistUse,
refR = rlevelUse)
# call Equ_Spawn_Recr_Fxn for each area to get B_equil and R_equil from SPB/R and SR parms
for(i in 1:narea){ ## will overwrite second time
# calc area-specific SPB/R and Yield/R, using area-specific R
if(length(rlevelUse) > 1){
rleveltmp = rlevelUse[i]
} else{
rleveltmp = rlevelUse
}
SB_Ri[v,i] <- prop$SB_i[i]/(rleveltmp*rdistUse[i])
Yield_Ri[v,i] <- prop$Yield_i[i]/(rleveltmp*rdistUse[i])
## Calc recruits using area-specific SB etc
propEq <- Equil_Spawn_Recr_Fxn(steepness = steep, SSB_virgin = SB0_i[i],
Recr_virgin = R0*rdistUse[i], SPR_temp = SB_Ri[v,i])
B_eq_i[v,i] <- propEq$B_equil
R_eq_i[v,i] <- propEq$R_equil
# if(v ==75 ) cat(k," ",i," ",B_eq_i[v,i], "\n")
# if(k == 2){ ## store quantities
proposed_i[v,'Fv',i] <- Ftest[v]
proposed_i[v,'Yield',i] <-  Yield_Ri[v,i]*R_eq_i[v,i]
proposed_i[v,'B',i] <-    SB_Ri[v,i] *R_eq_i[v,i]
if(v > 100 & i == 1) cat(Ftest[v]," ", proposed_i[v,'B',i] , "\n");
# } ## end k == 2
} ## end areas
# use ratio of B_equils among areas to calculate adjustment to recr_dist
if(k == 1) recr_dist_adj <- B_eq_i[v,]/sum(B_eq_i[v,]); #  next()
# if(v > 100 ) cat(Ftest[v]," ",rdistUse, "\n");
# if(k == 1) recr_dist_adj <- B_eq_i[v,]/sum(B_eq_i[v,])*recr_dist; next()
# } ## end steps a/b loop
## rick's question
rick[v,"Fv"] <- Ftest[v]
rick[v,"SBeqtotal"] <-   sum(B_eq_i[v,] )
rick[v,"R_ESUMB"] <- Equil_Spawn_Recr_Fxn(steepness = steep, SSB_virgin = sum(SB0_i),
Recr_virgin = R0, SPR_temp = sum(SB_Ri[v,]))$R_equil ## expected recruits given summed biomass in area
rick[v,"R_SUMEBA"]  <- sum( R_eq_i[v,]) ## sum of expected recruits in areas
proposed[v,'Fv'] <- Ftest[v]
proposed[v,'Yield'] <- sum(Yield_Ri[v,] * R_eq_i[v,]) # sum(Yield_Ri[v,]) * sum(R_eq_i[v,])
proposed[v,'B'] <-  sum(SB_Ri[v,] *  R_eq_i[v,i])  #sum(SB_Ri[v,]) * sum(B_eq_i[v,])
} ## end FV
i = 1
SB0_i
SB_Ri[v,i]
for(v in 1:length(Ftest)){
for(k in 1:2){ ## Loop over steps A & B
if(k == 1){
rdistUse <- recr_dist
rlevelUse <- rec_level
} else{
rdistUse <- recr_dist_adj
rlevelUse <-   rec_level ## should this be sum(Req?)
}
## define virgin biomass by AREA
SB0_i <- doNage( Fv = rep(0,narea),
X = X_ija,
rdist = rdistUse,
refR = rlevelUse)$SB_i
## get values at present Fv
prop <- doNage( Fv = rep(Ftest[v],narea),
X = X_ija,
rdist = rdistUse,
refR = rlevelUse)
# call Equ_Spawn_Recr_Fxn for each area to get B_equil and R_equil from SPB/R and SR parms
for(i in 1:narea){ ## will overwrite second time
# calc area-specific SPB/R and Yield/R, using area-specific R
if(length(rlevelUse) > 1){
rleveltmp = rlevelUse[i]
} else{
rleveltmp = rlevelUse
}
SB_Ri[v,i] <- prop$SB_i[i]/(rleveltmp*rdistUse[i])
Yield_Ri[v,i] <- prop$Yield_i[i]/(rleveltmp*rdistUse[i])
## Calc recruits using area-specific SB etc
propEq <- Equil_Spawn_Recr_Fxn(steepness = steep, SSB_virgin = SB0_i[i],
Recr_virgin = R0*rdistUse[i], SPR_temp = SB_Ri[v,i])
B_eq_i[v,i] <- propEq$B_equil
R_eq_i[v,i] <- propEq$R_equil
# if(v ==75 ) cat(k," ",i," ",B_eq_i[v,i], "\n")
if(k == 2){ ## store quantities
proposed_i[v,'Fv',i] <- Ftest[v]
proposed_i[v,'Yield',i] <-  Yield_Ri[v,i]*R_eq_i[v,i]
proposed_i[v,'B',i] <-    SB_Ri[v,i] *R_eq_i[v,i]
if(v > 100 & i == 1) cat(Ftest[v]," ", proposed_i[v,'B',i] , "\n");
} ## end k == 2
} ## end areas
# use ratio of B_equils among areas to calculate adjustment to recr_dist
if(k == 1) recr_dist_adj <- B_eq_i[v,]/sum(B_eq_i[v,]); #  next()
# if(v > 100 ) cat(Ftest[v]," ",rdistUse, "\n");
# if(k == 1) recr_dist_adj <- B_eq_i[v,]/sum(B_eq_i[v,])*recr_dist; next()
} ## end steps a/b loop
## rick's question
rick[v,"Fv"] <- Ftest[v]
rick[v,"SBeqtotal"] <-   sum(B_eq_i[v,] )
rick[v,"R_ESUMB"] <- Equil_Spawn_Recr_Fxn(steepness = steep, SSB_virgin = sum(SB0_i),
Recr_virgin = R0, SPR_temp = sum(SB_Ri[v,]))$R_equil ## expected recruits given summed biomass in area
rick[v,"R_SUMEBA"]  <- sum( R_eq_i[v,]) ## sum of expected recruits in areas
proposed[v,'Fv'] <- Ftest[v]
proposed[v,'Yield'] <- sum(Yield_Ri[v,] * R_eq_i[v,]) # sum(Yield_Ri[v,]) * sum(R_eq_i[v,])
proposed[v,'B'] <-  sum(SB_Ri[v,] *  R_eq_i[v,i])  #sum(SB_Ri[v,]) * sum(B_eq_i[v,])
} ## end FV
## sanity check --
ggplot(current, aes(x = Fv, y = Yield)) +
geom_line(lwd = 1.1, aes(color = 'current')) +
geom_line(data = proposed, lwd = 1.1, aes(color = 'proposed')) +
theme_sleek()
for(v in 1:length(Ftest)){
for(k in 1:2){ ## Loop over steps A & B
if(k == 1){
rdistUse <- recr_dist
rlevelUse <- rec_level
} else{
rdistUse <- recr_dist_adj
rlevelUse <-   rec_level ## should this be sum(Req?)
}
## define virgin biomass by AREA
SB0_i <- doNage( Fv = rep(0,narea),
X = X_ija,
rdist = rdistUse,
refR = rlevelUse)$SB_i
## get values at present Fv
prop <- doNage( Fv = rep(Ftest[v],narea),
X = X_ija,
rdist = rdistUse,
refR = rlevelUse)
# call Equ_Spawn_Recr_Fxn for each area to get B_equil and R_equil from SPB/R and SR parms
for(i in 1:narea){ ## will overwrite second time
# calc area-specific SPB/R and Yield/R, using area-specific R
if(length(rlevelUse) > 1){
rleveltmp = rlevelUse[i]
} else{
rleveltmp = rlevelUse
}
SB_Ri[v,i] <- prop$SB_i[i]/(rleveltmp*rdistUse[i])
Yield_Ri[v,i] <- prop$Yield_i[i]/(rleveltmp*rdistUse[i])
## Calc recruits using area-specific SB etc
propEq <- Equil_Spawn_Recr_Fxn(steepness = steep, SSB_virgin = SB0_i[i],
Recr_virgin = R0*rdistUse[i], SPR_temp = SB_Ri[v,i])
B_eq_i[v,i] <- propEq$B_equil
R_eq_i[v,i] <- propEq$R_equil
# if(v ==75 ) cat(k," ",i," ",B_eq_i[v,i], "\n")
if(k == 2){ ## store quantities
proposed_i[v,'Fv',i] <- Ftest[v]
proposed_i[v,'Yield',i] <-  Yield_Ri[v,i]*R_eq_i[v,i]
proposed_i[v,'B',i] <-    SB_Ri[v,i] *R_eq_i[v,i]
# if(v > 100 & i == 1) cat(Ftest[v]," ", proposed_i[v,'B',i] , "\n");
} ## end k == 2
} ## end areas
# use ratio of B_equils among areas to calculate adjustment to recr_dist
if(k == 1) recr_dist_adj <- B_eq_i[v,]/sum(B_eq_i[v,]); #  next()
if(v > 100 ) cat(Ftest[v]," ",rdistUse, "\n");
# if(k == 1) recr_dist_adj <- B_eq_i[v,]/sum(B_eq_i[v,])*recr_dist; next()
} ## end steps a/b loop
## rick's question
rick[v,"Fv"] <- Ftest[v]
rick[v,"SBeqtotal"] <-   sum(B_eq_i[v,] )
rick[v,"R_ESUMB"] <- Equil_Spawn_Recr_Fxn(steepness = steep, SSB_virgin = sum(SB0_i),
Recr_virgin = R0, SPR_temp = sum(SB_Ri[v,]))$R_equil ## expected recruits given summed biomass in area
rick[v,"R_SUMEBA"]  <- sum( R_eq_i[v,]) ## sum of expected recruits in areas
proposed[v,'Fv'] <- Ftest[v]
proposed[v,'Yield'] <- sum(Yield_Ri[v,] * R_eq_i[v,]) # sum(Yield_Ri[v,]) * sum(R_eq_i[v,])
proposed[v,'B'] <-  sum(SB_Ri[v,] *  R_eq_i[v,i])  #sum(SB_Ri[v,]) * sum(B_eq_i[v,])
} ## end FV
for(v in 1:length(Ftest)){
for(k in 1:2){ ## Loop over steps A & B
if(k == 1){
rdistUse <- recr_dist
rlevelUse <- rec_level
} else{
rdistUse <- recr_dist_adj
rlevelUse <-   rec_level ## should this be sum(Req?)
}
## define virgin biomass by AREA
SB0_i <- doNage( Fv = rep(0,narea),
X = X_ija,
rdist = rdistUse,
refR = rlevelUse)$SB_i
## get values at present Fv
prop <- doNage( Fv = rep(Ftest[v],narea),
X = X_ija,
rdist = rdistUse,
refR = rlevelUse)
# call Equ_Spawn_Recr_Fxn for each area to get B_equil and R_equil from SPB/R and SR parms
for(i in 1:narea){ ## will overwrite second time
# calc area-specific SPB/R and Yield/R, using area-specific R
if(length(rlevelUse) > 1){
rleveltmp = rlevelUse[i]
} else{
rleveltmp = rlevelUse
}
SB_Ri[v,i] <- prop$SB_i[i]/(rleveltmp*rdistUse[i])
Yield_Ri[v,i] <- prop$Yield_i[i]/(rleveltmp*rdistUse[i])
## Calc recruits using area-specific SB etc
propEq <- Equil_Spawn_Recr_Fxn(steepness = steep, SSB_virgin = SB0_i[i],
Recr_virgin = R0*rdistUse[i], SPR_temp = SB_Ri[v,i])
B_eq_i[v,i] <- propEq$B_equil
R_eq_i[v,i] <- propEq$R_equil
# if(v ==75 ) cat(k," ",i," ",B_eq_i[v,i], "\n")
if(k == 2){ ## store quantities
proposed_i[v,'Fv',i] <- Ftest[v]
proposed_i[v,'Yield',i] <-  Yield_Ri[v,i]*R_eq_i[v,i]
proposed_i[v,'B',i] <-    SB_Ri[v,i] *R_eq_i[v,i]
if(v > 100 & i == 1) cat(Ftest[v]," ", proposed_i[v,'B',i] , "\n");
} ## end k == 2
} ## end areas
# use ratio of B_equils among areas to calculate adjustment to recr_dist
if(k == 1) recr_dist_adj <- B_eq_i[v,]/sum(B_eq_i[v,]); #  next()
# if(v > 100 & k ==2 ) cat(Ftest[v]," ",rdistUse, "\n");
# if(k == 1) recr_dist_adj <- B_eq_i[v,]/sum(B_eq_i[v,])*recr_dist; next()
} ## end steps a/b loop
## rick's question
rick[v,"Fv"] <- Ftest[v]
rick[v,"SBeqtotal"] <-   sum(B_eq_i[v,] )
rick[v,"R_ESUMB"] <- Equil_Spawn_Recr_Fxn(steepness = steep, SSB_virgin = sum(SB0_i),
Recr_virgin = R0, SPR_temp = sum(SB_Ri[v,]))$R_equil ## expected recruits given summed biomass in area
rick[v,"R_SUMEBA"]  <- sum( R_eq_i[v,]) ## sum of expected recruits in areas
proposed[v,'Fv'] <- Ftest[v]
proposed[v,'Yield'] <- sum(Yield_Ri[v,] * R_eq_i[v,]) # sum(Yield_Ri[v,]) * sum(R_eq_i[v,])
proposed[v,'B'] <-  sum(SB_Ri[v,] *  R_eq_i[v,i])  #sum(SB_Ri[v,]) * sum(B_eq_i[v,])
} ## end FV
for(v in 1:length(Ftest)){
for(k in 1:2){ ## Loop over steps A & B
if(k == 1){
rdistUse <- recr_dist
rlevelUse <- rec_level
} else{
rdistUse <- recr_dist_adj
rlevelUse <-   rec_level ## should this be sum(Req?)
}
## define virgin biomass by AREA
SB0_i <- doNage( Fv = rep(0,narea),
X = X_ija,
rdist = rdistUse,
refR = rlevelUse)$SB_i
## get values at present Fv
prop <- doNage( Fv = rep(Ftest[v],narea),
X = X_ija,
rdist = rdistUse,
refR = rlevelUse)
# call Equ_Spawn_Recr_Fxn for each area to get B_equil and R_equil from SPB/R and SR parms
for(i in 1:narea){ ## will overwrite second time
# calc area-specific SPB/R and Yield/R, using area-specific R
if(length(rlevelUse) > 1){
rleveltmp = rlevelUse[i]
} else{
rleveltmp = rlevelUse
}
SB_Ri[v,i] <- prop$SB_i[i]/(rleveltmp*rdistUse[i])
Yield_Ri[v,i] <- prop$Yield_i[i]/(rleveltmp*rdistUse[i])
## Calc recruits using area-specific SB etc
propEq <- Equil_Spawn_Recr_Fxn(steepness = steep, SSB_virgin = SB0_i[i],
Recr_virgin = R0*rdistUse[i], SPR_temp = SB_Ri[v,i])
B_eq_i[v,i] <- propEq$B_equil
R_eq_i[v,i] <- propEq$R_equil
# if(v ==75 ) cat(k," ",i," ",B_eq_i[v,i], "\n")
if(k == 2){ ## store quantities
proposed_i[v,'Fv',i] <- Ftest[v]
proposed_i[v,'Yield',i] <-  Yield_Ri[v,i]*R_eq_i[v,i]
proposed_i[v,'B',i] <-    SB_Ri[v,i] *R_eq_i[v,i]
if(v > 75 & i == 1) cat(Ftest[v]," ", proposed_i[v,'B',i] , "\n");
} ## end k == 2
} ## end areas
# use ratio of B_equils among areas to calculate adjustment to recr_dist
if(k == 1) recr_dist_adj <- B_eq_i[v,]/sum(B_eq_i[v,]); #  next()
# if(v > 100 & k ==2 ) cat(Ftest[v]," ",rdistUse, "\n");
# if(k == 1) recr_dist_adj <- B_eq_i[v,]/sum(B_eq_i[v,])*recr_dist; next()
} ## end steps a/b loop
## rick's question
rick[v,"Fv"] <- Ftest[v]
rick[v,"SBeqtotal"] <-   sum(B_eq_i[v,] )
rick[v,"R_ESUMB"] <- Equil_Spawn_Recr_Fxn(steepness = steep, SSB_virgin = sum(SB0_i),
Recr_virgin = R0, SPR_temp = sum(SB_Ri[v,]))$R_equil ## expected recruits given summed biomass in area
rick[v,"R_SUMEBA"]  <- sum( R_eq_i[v,]) ## sum of expected recruits in areas
proposed[v,'Fv'] <- Ftest[v]
proposed[v,'Yield'] <- sum(Yield_Ri[v,] * R_eq_i[v,]) # sum(Yield_Ri[v,]) * sum(R_eq_i[v,])
proposed[v,'B'] <-  sum(SB_Ri[v,] *  R_eq_i[v,i])  #sum(SB_Ri[v,]) * sum(B_eq_i[v,])
} ## end FV
for(v in 1:length(Ftest)){
for(k in 1:2){ ## Loop over steps A & B
if(k == 1){
rdistUse <- recr_dist
rlevelUse <- rec_level
} else{
rdistUse <- recr_dist_adj
rlevelUse <-   rec_level ## should this be sum(Req?)
}
## define virgin biomass by AREA
SB0_i <- doNage( Fv = rep(0,narea),
X = X_ija,
rdist = rdistUse,
refR = rlevelUse)$SB_i
## get values at present Fv
prop <- doNage( Fv = rep(Ftest[v],narea),
X = X_ija,
rdist = rdistUse,
refR = rlevelUse)
# call Equ_Spawn_Recr_Fxn for each area to get B_equil and R_equil from SPB/R and SR parms
for(i in 1:narea){ ## will overwrite second time
# calc area-specific SPB/R and Yield/R, using area-specific R
if(length(rlevelUse) > 1){
rleveltmp = rlevelUse[i]
} else{
rleveltmp = rlevelUse
}
SB_Ri[v,i] <- prop$SB_i[i]/(rleveltmp*rdistUse[i])
Yield_Ri[v,i] <- prop$Yield_i[i]/(rleveltmp*rdistUse[i])
## Calc recruits using area-specific SB etc
propEq <- Equil_Spawn_Recr_Fxn(steepness = steep, SSB_virgin = SB0_i[i],
Recr_virgin = R0*rdistUse[i], SPR_temp = SB_Ri[v,i])
B_eq_i[v,i] <- propEq$B_equil
R_eq_i[v,i] <- propEq$R_equil
# if(v ==75 ) cat(k," ",i," ",B_eq_i[v,i], "\n")
if(k == 2){ ## store quantities
proposed_i[v,'Fv',i] <- Ftest[v]
proposed_i[v,'Yield',i] <-  Yield_Ri[v,i]*R_eq_i[v,i]
proposed_i[v,'B',i] <-    SB_Ri[v,i] *R_eq_i[v,i]
# if(v > 75 & i == 1) cat(Ftest[v]," ", proposed_i[v,'B',i] , "\n");
} ## end k == 2
} ## end areas
# use ratio of B_equils among areas to calculate adjustment to recr_dist
if(k == 1) recr_dist_adj <- B_eq_i[v,]/sum(B_eq_i[v,]); #  next()
if(v > 75 & k ==2 ) cat(Ftest[v]," ",rdistUse, "\n");
# if(k == 1) recr_dist_adj <- B_eq_i[v,]/sum(B_eq_i[v,])*recr_dist; next()
} ## end steps a/b loop
## rick's question
rick[v,"Fv"] <- Ftest[v]
rick[v,"SBeqtotal"] <-   sum(B_eq_i[v,] )
rick[v,"R_ESUMB"] <- Equil_Spawn_Recr_Fxn(steepness = steep, SSB_virgin = sum(SB0_i),
Recr_virgin = R0, SPR_temp = sum(SB_Ri[v,]))$R_equil ## expected recruits given summed biomass in area
rick[v,"R_SUMEBA"]  <- sum( R_eq_i[v,]) ## sum of expected recruits in areas
proposed[v,'Fv'] <- Ftest[v]
proposed[v,'Yield'] <- sum(Yield_Ri[v,] * R_eq_i[v,]) # sum(Yield_Ri[v,]) * sum(R_eq_i[v,])
proposed[v,'B'] <-  sum(SB_Ri[v,] *  R_eq_i[v,i])  #sum(SB_Ri[v,]) * sum(B_eq_i[v,])
} ## end FV
ggplot(current, aes(x = Fv, y = B)) +
geom_line(lwd = 1.1, aes(color = 'current')) +
geom_line(data = proposed, lwd = 1.1, aes(color = 'proposed')) +
theme_sleek()
ggplot(current, aes(x = B, y = Yield)) +
geom_line(lwd = 1.1, aes(color = 'current')) +
geom_line(data = proposed, lwd = 1.1, aes(color = 'proposed')) +
theme_sleek()
p1  | p3
## sanity check --
p1 <- ggplot(current, aes(x = Fv, y = Yield)) +
geom_line(lwd = 1.1, aes(color = 'current')) +
geom_line(data = proposed, lwd = 1.1, aes(color = 'proposed')) +
theme_sleek()
## i think the hitch is where F is cancelling out recruitment subsidy
p2 <- ggplot(current, aes(x = Fv, y = B)) +
geom_line(lwd = 1.1, aes(color = 'current')) +
geom_line(data = proposed, lwd = 1.1, aes(color = 'proposed')) +
theme_sleek()
p3 <- ggplot(current, aes(x = B, y = Yield)) +
geom_line(lwd = 1.1, aes(color = 'current')) +
geom_line(data = proposed, lwd = 1.1, aes(color = 'proposed')) +
theme_sleek()
p1  | p3
require(patchwork)
p1  | p3
## sanity check --
p1 <- ggplot(current, aes(x = Fv, y = Yield)) +
geom_line(lwd = 1.1, aes(color = 'current')) +
geom_line(data = proposed, lwd = 1.1, aes(color = 'proposed')) +
theme(legend.position = 'none') +
theme_sleek()
p1  | p3
## sanity check --
p1 <- ggplot(current, aes(x = Fv, y = Yield)) +
geom_line(lwd = 1.1, aes(color = 'current')) +
geom_line(data = proposed, lwd = 1.1, aes(color = 'proposed')) +
theme_sleek() +theme(legend.position = 'none')
p1  | p3
p3 <- ggplot(current, aes(x = B, y = Yield)) +
geom_line(lwd = 1.1, aes(color = 'current')) +
geom_line(data = proposed, lwd = 1.1, aes(color = 'proposed')) +
theme_sleek() +labs(color = "Approach")
p1  | p3
rick %>%
select(-Fv) %>%
melt(id = 'SBeqtotal') %>%
ggplot(., aes(x = SBeqtotal, y = value, color = variable)) +
geom_point()
